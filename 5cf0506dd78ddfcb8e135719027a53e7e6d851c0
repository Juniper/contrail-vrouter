{
  "comments": [
    {
      "key": {
        "uuid": "764ad914_c905f65d",
        "filename": "utils/nh.c",
        "patchSetId": 3
      },
      "lineNbr": 750,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-09T10:39:22Z",
      "side": 1,
      "message": "This would violate semantics of zero_opt. A better way is to remove \"\u0026opt[SOCK_DIR_OPT_IND]\" in long_options and use a stack variable like \u0026sock_dir_set. Then remove this zero_opt setting here.\n\nAlternatively, just call opt_set(SOCK_DIR_OPT_IND) in the begining of validate_options()",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19e5e346_657a9042",
        "filename": "utils/nh.c",
        "patchSetId": 3
      },
      "lineNbr": 750,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "I have changed the code now",
      "parentUuid": "764ad914_c905f65d",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "909e8946_f865fafd",
        "filename": "utils/unix_util.c",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-09T10:39:22Z",
      "side": 1,
      "message": "This does not look good. Can you define wrapper functions for this?\n\nstatic bool vtest_env \u003d false;\n\nbool is_vtest_env()\n{\n    return vtest_env;\n}\n\nvoid set_vtest_env()\n{\n    vtest_env \u003d true;\n}\n\nIn the nl_util.h, you can define the prototypes for these.\nThe utils (mpls,nh,flow etc.) can just call set_vtest_env() if vr_socket_dir is set.\n\nYou can remove all the references of VR_NETLINK_PROTO_TEST and instead, add is_vtest_env() code in get_domain(), get_protocol(), get_type() etc. to return the appropriate value. \n\nThis method would be lot cleaner and less confusing.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bca4090a_d43bcf64",
        "filename": "utils/unix_util.c",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Better name would be vtest_is_env()",
      "parentUuid": "909e8946_f865fafd",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3862e050_258c43ab",
        "filename": "utils/unix_util.c",
        "patchSetId": 3
      },
      "lineNbr": 38,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "I have defined a new platform type for vtest and used it to cleanup this.",
      "parentUuid": "bca4090a_d43bcf64",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24ec92d0_aec8581a",
        "filename": "utils/unix_util.c",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "These changes would not be required since env_is_vtest() is checked inside get_platform()",
      "range": {
        "startLine": 57,
        "startChar": 37,
        "endLine": 57,
        "endChar": 38
      },
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6585ec3_92aa8296",
        "filename": "utils/unix_util.c",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "I have cleaned this using the new platform type",
      "parentUuid": "24ec92d0_aec8581a",
      "range": {
        "startLine": 57,
        "startChar": 37,
        "endLine": 57,
        "endChar": 38
      },
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8876408c_7bb3789d",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Pl append a comment in the review that sandesh_gen.c is changed to accommodate new list parsing generated by sandesh_py library -\n         \u003cvifr_mac type\u003d\"list\" identifier\u003d\"38\"\u003e\n            \u003clist type\u003d\"byte\" size\u003d\"6\"\u003e\n               \u003celement\u003e-34\u003c/element\u003e\n               \u003celement\u003e-83\u003c/element\u003e\n               \u003celement\u003e-66\u003c/element\u003e\n               \u003celement\u003e-17\u003c/element\u003e\n               \u003celement\u003e0\u003c/element\u003e\n               \u003celement\u003e2\u003c/element\u003e\n            \u003c/list\u003e\n         \u003c/vifr_mac\u003e\nAlso mention that the old way below still works -\n         \u003cvifr_mac\u003ede:ad:be:ef:00:01\u003c/vifr_mac\u003e",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6541f110_a0030ed4",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 204,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Sure",
      "parentUuid": "8876408c_7bb3789d",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4b88e6c_303cd241",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 501,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T03:53:18Z",
      "side": 1,
      "message": "No need of this variable. In the below switch statement, you can just do:\nswitch(atoi(size)\u003e\u003e3)\n{\n    ...\n}",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c55484c_89b97313",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "This backslash would insert whitespaces in the generated code. A better way to do this is using quotes -\nEg:\ngen_write(ofp, nesting+1, \"if (!strncmp(tmpnode-\u003ename,\"\n         \"\\\"list\\\", sizeof(\\\"list\\\"))) {\\n\");",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5fc09dcc_86224dda",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 521,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Fixed",
      "parentUuid": "3c55484c_89b97313",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8738be96_e1ac8bbf",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "This is wrong. tmp_list is char* and you will be assigning uint16_t. Only the last byte will be assigned. You have to define tmp_list as uint16*. Same is the case with others below.\nRemove the declaration of tmp_list above and define it here as - \nuint16_t* tmp_list \u003d (uint16_t*)calloc(elem_count, 2);\n\nAlso define list_index here instead of above. Eg:\nuint16_t* list_index \u003d tmp_list\n\nThis way, you can iterate the elements of tmp_list by just auto-incrementing list_index. Eg:\nlist_index++",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82e3a445_bb863833",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T03:51:54Z",
      "side": 1,
      "message": "I am surprised, I didn\u0027t get any warning from compiler. On a standalone program I got a warning.\nThanks for catching this! I will change the code accordingly.",
      "parentUuid": "8738be96_e1ac8bbf",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d57fe9bd_036bf408",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "Ofcourse there will be no warning since you are doing an explicit cast. Compiler will think that you know what you are doing!! :-)",
      "parentUuid": "82e3a445_bb863833",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e544047_c2ddaf1e",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T05:14:23Z",
      "side": 1,
      "message": "No, even with explicit cast, compiler should report the warning.\nHeres the output from my test prog.\n\ngcc test_prog.c -o test_prog\ntest_prog.c: In function ‘main’:\ntest_prog.c:9:5: warning: large integer implicitly truncated to unsigned type [-Woverflow]\n     tmp_list[0] \u003d (unsigned short) 0xabcd;\n     ^",
      "parentUuid": "d57fe9bd_036bf408",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5444be03_3636abdc",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T05:18:54Z",
      "side": 1,
      "message": "kirankn@contrail-ubm-kirankn:/tmp$ make 3\ncc     3.c   -o 3\nkirankn@contrail-ubm-kirankn:/tmp$ cat 3.c\n#include \u003cstdio.h\u003e\n#include \u003cstring.h\u003e\n\nint main()\n{\n        long long a \u003d 60001;\n        char test[64];\n        memset(test, 0, sizeof(test));\n        test[10] \u003d (long long)a;\n        return 0;\n}",
      "parentUuid": "8e544047_c2ddaf1e",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "853e91e6_940dd56b",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T05:31:03Z",
      "side": 1,
      "message": ":-)\n\n[anandrao@nodem1 ~]$ cat test_prog.c\n\n#include \u003cstdio.h\u003e\n#include \u003cstdlib.h\u003e\n\nint main (int argc, char *argv[])\n{\n    unsigned char *tmp_list \u003d NULL;\n    tmp_list \u003d (unsigned char *) calloc(1, 2);\n    tmp_list[0] \u003d (unsigned short) 0xabcd;\n    printf(\"val \u003d %x %x\\n\", tmp_list[0], tmp_list[1]);\n    return 0;\n}\n\n[anandrao@nodem1 ~]$ gcc test_prog.c -o test_prog\ntest_prog.c: In function ‘main’:\ntest_prog.c:9:5: warning: large integer implicitly truncated to unsigned type [-Woverflow]\n     tmp_list[0] \u003d (unsigned short) 0xabcd;\n     ^",
      "parentUuid": "5444be03_3636abdc",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce6fcc0d_1bf95e15",
        "filename": "utils/vtest/sandesh_gen.c",
        "patchSetId": 3
      },
      "lineNbr": 568,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "853e91e6_940dd56b",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71f71fd0_d8219ec2",
        "filename": "utils/vtest_py/SConscript",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Pl put the logic here itself instead of calling the python script",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c7fdbc9_e902648c",
        "filename": "utils/vtest_py/SConscript",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "We need to copy after the sandesh files are generated which is in phase 2 of the SCons processing. Doing it inline will invoke it in phase 1 of SCons processing.",
      "parentUuid": "71f71fd0_d8219ec2",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0148d4cb_0f2b969f",
        "filename": "utils/vtest_py/SConscript",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "I was thinking this can be done -\n\ndef copy_dir(target, source, env):\n    shutil.rmtree(...)\n    shutil.copytree(...)\n\nenv.Command(\"copy_pysandesh\", [], copy_dir...)\n\nHow is this different from calling an external file?",
      "parentUuid": "6c7fdbc9_e902648c",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af07e41f_82be73db",
        "filename": "utils/vtest_py/SConscript",
        "patchSetId": 3
      },
      "lineNbr": 64,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "If it is external file, it gets called only in phase2 of scons processing i.e after sandesh library is generated. If we do it inline, it will happen in phase 1 of scons processing i.e before sandesh library is generated.",
      "parentUuid": "0148d4cb_0f2b969f",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44d3d830_baa5e756",
        "filename": "utils/vtest_py/copy_dir.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Is it possible to remove this file and instead put the logic inside SConscript itself?\nhttps://stackoverflow.com/questions/30225813/scons-explicit-dependency",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "18d2fe6f_58f537e7",
        "filename": "utils/vtest_py/copy_dir.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "No this required. See the reply to your comment in SConscript",
      "parentUuid": "44d3d830_baa5e756",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f5f4e711_f2fb7304",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-09T10:39:22Z",
      "side": 1,
      "message": "Pl print the usage and do command-line validation.\nUse python\u0027s argparse library",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "605adbec_c098bc84",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-09T10:48:06Z",
      "side": 1,
      "message": "Example - \nhttps://github.com/Juniper/contrail-controller/blob/master/src/config/utils/provision_config_node.py#L58",
      "parentUuid": "f5f4e711_f2fb7304",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "013c0d0e_a296e2d3",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T05:31:03Z",
      "side": 1,
      "message": "This is a bash script, not python script",
      "parentUuid": "605adbec_c098bc84",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3101909f_6139aa19",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T05:36:55Z",
      "side": 1,
      "message": "my bad.. need a cmdline validation using bash cmds!",
      "parentUuid": "013c0d0e_a296e2d3",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b3b3ce1f_719669f8",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3101909f_6139aa19",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e71e52a_bef2ebd8",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-09T10:39:22Z",
      "side": 1,
      "message": "Pl add checks to see if they are set. If not, throw a meaningful error",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b648a2_ec15bf95",
        "filename": "utils/vtest_py/run_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e71e52a_bef2ebd8",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f459bd39_e9b33785",
        "filename": "utils/vtest_py/setup_venv.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Validate cmdline arguments and display usage",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "647a0b4f_76222ecc",
        "filename": "utils/vtest_py/setup_venv.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "This is more of an internal script of the infra and not intended to be invoked from outside.\nProbably it is not required?",
      "parentUuid": "f459bd39_e9b33785",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2289d5c2_f9193ca0",
        "filename": "utils/vtest_py/setup_venv.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "For the sake of completeness. Will leave it upto you.",
      "parentUuid": "647a0b4f_76222ecc",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0830549_33be595a",
        "filename": "utils/vtest_py/setup_venv.sh",
        "patchSetId": 3
      },
      "lineNbr": 2,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "As it is an internal script of infra and pretty straightforward, not adding anything more",
      "parentUuid": "2289d5c2_f9193ca0",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ae6eca8_c32af3c8",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:53:29Z",
      "side": 1,
      "message": "Why do we need to do this os.environ assignment here? Why not in vtest constructor?\nThe test should just initialize vtest -\nvt \u003d vtest(\"test1\")",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c9612b78_1a0e4fd9",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "Wanted to keep vtest independent of any environment variable dependencies.\nWill keep it that way.",
      "parentUuid": "8ae6eca8_c32af3c8",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca7e92aa_2d21ac05",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "There are ways to solve this. You can have a vtest_base class. But lets not put this env variable in every test case. User should just initialize the vtest with the name.",
      "parentUuid": "c9612b78_1a0e4fd9",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff97af0a_76e36d27",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Actually i am doing it for pytest fixtures, so moved this to vtest class as well",
      "parentUuid": "ca7e92aa_2d21ac05",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7663b14f_e8f44ec1",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:53:29Z",
      "side": 1,
      "message": "Pl see if this works -\nmac_addr_str \u003d \"de:ad:be:ef:00:02\"\nvif.vifr_mac \u003d mac_addr_str.replace(\u0027:\u0027, \u0027\u0027).decode(\u0027hex\u0027)\n\nThis would be more friendly for others to use.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "500b1c2b_efa7a3b2",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "Am I missing something? The one line assignment is more simpler.",
      "parentUuid": "7663b14f_e8f44ec1",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f004a29_a3cbbb7a",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "Users would prefer natural way of writing mac addresses.\nyou can write a function mac_bytes() which takes a string representation of mac address and give the list. Will leave it upto you to implement.",
      "parentUuid": "500b1c2b_efa7a3b2",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f9d811ed_e57f6467",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 25,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "It is a matter of style. I prefer the one liner. Will go with it :-)",
      "parentUuid": "3f004a29_a3cbbb7a",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1f927bd_80bd093d",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:53:29Z",
      "side": 1,
      "message": "Pl use the utility python class ipaddress here. It will help other test case writers who use this as an example.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a57b239_fe08f2f0",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "We need python3 for this. Right now venv has 2.7.5 which doesn\u0027t support ipaddress.\nWe can do this when we move to python3.",
      "parentUuid": "f1f927bd_80bd093d",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "945bef71_a481c5c9",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:53:29Z",
      "side": 1,
      "message": "User has just 1 object to send. No need to put in list. Ref my comment in vtest_lib send_sandesh_req()",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20385679_9c43c27a",
        "filename": "utils/vtest_py/tests/test1.py",
        "patchSetId": 3
      },
      "lineNbr": 33,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "945bef71_a481c5c9",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f2a0ec56_542edd5c",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "I didn\u0027t see any method to take a list of objects and generate xml and do a send in 1-shot. It would be very good to add that in the first commit itself.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d624ce60_9572504c",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:53:29Z",
      "side": 1,
      "message": "Ignore this. I see you have addressed it.",
      "parentUuid": "f2a0ec56_542edd5c",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2bed3d78_70a8734a",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d624ce60_9572504c",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19829005_21afdd92",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2bed3d78_70a8734a",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19dfc5a0_a30aca9f",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Is this a docstring? Does it need to be 3 double-quotes?",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d09286a4_b1edf8a9",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 70,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "19dfc5a0_a30aca9f",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c20d810_9a472894",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "This raises an oserror exception I think. Check and handle.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bd70d573_632d8197",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "If exception is raised, this is a serious problem.\nBetter to terminate the processing rather than handling the exception?",
      "parentUuid": "9c20d810_9a472894",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "488a8289_2c68ce40",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "Sure, you can display a suitable error and terminate using exit() call",
      "parentUuid": "bd70d573_632d8197",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fba0fbb_07698582",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "The python exception traceback has enough details to display the error.\nNothing more is required.",
      "parentUuid": "488a8289_2c68ce40",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "86c9841a_aeb466d7",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-09T10:39:22Z",
      "side": 1,
      "message": "Pl add a comment on why it\u0027s 2.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "40e47833_c31175c7",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 98,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86c9841a_aeb466d7",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "35835e3f_441d3270",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "This too raises an oserror exception I think. Check and handle.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f32af033_d962fd44",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 116,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35835e3f_441d3270",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19fcd65d_a46013c2",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "Do you need to define vtest_binary_path and socket_dir?",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "562bb8ba_e98ad476",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 130,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Just for completeness sake",
      "parentUuid": "19fcd65d_a46013c2",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "268bc6ad_9d87c5e9",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "This raises ioexception",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ca8a903_e9cbd7a1",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "If ingore_errors\u003dTrue, it doesn\u0027t raise the exception.",
      "parentUuid": "268bc6ad_9d87c5e9",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d7277b9_b8a01987",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "Would be good to catch the exception and report it to user.",
      "parentUuid": "5ca8a903_e9cbd7a1",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d1f1410_ee0a41f3",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 143,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Since ignore_errors \u003d true, no exceptions would be raised by python",
      "parentUuid": "4d7277b9_b8a01987",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c557dfaa_168558f2",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "This raises oserror exception",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cefec631_eb15ba27",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c557dfaa_168558f2",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "93c379e4_20b46210",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "Does this need to be static method?",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "abefbc16_e4f2b687",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "No, because we are referring and modifying an instance variable.",
      "parentUuid": "93c379e4_20b46210",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "832b7e12_fd793c81",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 146,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "abefbc16_e4f2b687",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f862107_67581b4c",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:15:44Z",
      "side": 1,
      "message": "Ref prev comment on changing this to factory method",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9f55f772_d3799339",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f862107_67581b4c",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "73ce4b33_d724cca7",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "Better way to do this is:\nwith open(filename, \u0027w\u0027) as f:\n       try:\n           # do stuff\n       except \n           # handle error\n\nIn general, all IO operations need to have try/except in the code",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa8857aa_1ff83de5",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 163,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Sure. Done.",
      "parentUuid": "73ce4b33_d724cca7",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "af8dfff6_4f505ab5",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-10T11:02:52Z",
      "side": 1,
      "message": "put try/except for all usages of wrpcap",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac86bcf6_bf1024e8",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-11T06:12:07Z",
      "side": 1,
      "message": "Do you know what exception is raised by wrpcap? Not able to find it.",
      "parentUuid": "af8dfff6_4f505ab5",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "520576c1_1a18bc03",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T06:54:49Z",
      "side": 1,
      "message": "Check -\nhttps://stackoverflow.com/questions/28736188/python-supress-warnings-while-creating-a-empty-pcap-file-with-scapy\n\nYou can add it just to be safe",
      "parentUuid": "ac86bcf6_bf1024e8",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c41ec38_50622f87",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 183,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "I think this may not be a good idea since it can lead to misuse of wrpcap() as given in the link. If the user is passing wrong argument, it is better to fail and let him know the error rather than handling the exception.",
      "parentUuid": "520576c1_1a18bc03",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae86fe02_99c03737",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 232
      },
      "writtenOn": "2019-07-11T04:53:29Z",
      "side": 1,
      "message": "Pl dont enforce to use a list always. You can use python\u0027s isinstance() method to check if the parameter is list or not. If its a list, iterate and write xml. If not, just write xml.\n\nIf the user has just 1 object to send, he can send as-is without putting it in a list.",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff574b86_1ba010d1",
        "filename": "utils/vtest_py/vtest_lib.py",
        "patchSetId": 3
      },
      "lineNbr": 247,
      "author": {
        "id": 631
      },
      "writtenOn": "2019-07-16T11:58:50Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae86fe02_99c03737",
      "revId": "5cf0506dd78ddfcb8e135719027a53e7e6d851c0",
      "serverId": "c72cd27d-1743-4a55-84a4-cd13b8400c52",
      "unresolved": false
    }
  ]
}