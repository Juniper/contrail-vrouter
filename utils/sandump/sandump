#!/bin/sh

usage() {
    echo "Sandump - Sandesh dump utility"
    echo "Usage:"
    echo "       $0 -w <filename> [filename to write the sandesh packets]"
    echo "       $0 -c <filename> [force cleanup]"
    exit 1
}


check_hex () {
    if ! [[ $1 =~ ^[0-9A-Fa-f]{2}$ ]] ; then
        return 0
    else
        return 1
    fi
}

fb=formatted_bytes.log
write (){
    hex_count=0
    i=0
    arr=("${!1}")
    packet_info=("${!2}")
    printf "%s%s %s" ${packet_info[0]} ${packet_info[1]} ${packet_info[2]} >> $fb
    printf "\n" >> $fb
    while [ $i -le ${#arr[@]} ]
    do
        printf "%.6x " $hex_count >> $fb
        hex_count=$((hex_count+16))
        for (( j=0; j<16; j++ ))
        do
            printf "%s " ${arr[$(($i+$j))]} >> $fb
        done
        printf "\n" >> $fb
        i=$((i+16))
    done
}

format () {
	echo > $fb
	hexbytes=()
	while read f
	do
	    read -a arr <<< $f
	    for(( i=0; i<${#arr[@]}; i++ ))
    	    do
        	if [ ${arr[i]} = '<' -o ${arr[i]} = '>' ]; then
            		if [ ${arr[i]} = '<' ]; then
                		arr[i]='I'
            		else
                		arr[i]='O'
            		fi
            		packet_info=(${arr[i]} ${arr[$i+1]} ${arr[$i+2]})
        	fi

		check_hex ${arr[i]}

		ret=$?
        	if [ $ret == 1 ]
        	then
            		hexbytes+=(${arr[i]})
        	fi
        	if [ ${arr[i]} == "--" ]
        	then
            		write hexbytes[@] packet_info[@]
            		printf "\n" >> $fb
            		unset hexbytes packet_info
            		break
        	fi
    	    done
	done < $1
}


fn=""
sb=sniffed_bytes.log
sandump_close() {
    mv -f /var/run/vrouter/dpdk_netlink.orig /var/run/vrouter/dpdk_netlink
    if ! [ "$fn" =  "" ];
    then
        echo "Written $(stat -c %s $sb) bytes"
    fi
	format $sb
	text2pcap -l 147 -D -n -N Vrouter -t "%Y/%m/%d %T." $fb $fn
    exit 0
}

if [ $# -eq 1 ];
then
    usage
fi

# Handle command-line arguments
if [ $# -eq 2 ];
then
    if [ $1 = "-w" ];
    then
        fn=$2
        echo "Dumping into $sb"
    elif [ $1 = "-c" ];
    then
        mv -f /var/run/vrouter/dpdk_netlink.orig /var/run/vrouter/dpdk_netlink
        exit 0
    fi
fi

# Check if all required packages are installed
socat -V >/dev/null 2>&1
if [ $? -ne 0 ];
then
    echo "Error! socat utility is not present, please install"
    exit 1
fi

## set signal handler
trap "echo $0: closing...; \
    sandump_close; exit 0" \
    HUP INT QUIT ABRT PIPE TERM

# Actual logic to sniff sandesh packets
mv -f /var/run/vrouter/dpdk_netlink /var/run/vrouter/dpdk_netlink.orig
if [ "$fn" = "" ];
then
    socat -t100 -x -v UNIX-LISTEN:/var/run/vrouter/dpdk_netlink,mode=777,reuseaddr,fork UNIX-CONNECT:/var/run/vrouter/dpdk_netlink.orig
else
    socat -t100 -x -v UNIX-LISTEN:/var/run/vrouter/dpdk_netlink,mode=777,reuseaddr,fork UNIX-CONNECT:/var/run/vrouter/dpdk_netlink.orig 2> $sb
fi
