#
# Copyright (c) 2013 Juniper Networks, Inc. All rights reserved.
#
import os
import sys

Import('VRutilsEnv')
env = VRutilsEnv.Clone()
VTestEnv = env;

src_root = Dir('#').srcnode().abspath
build_root = Dir(env['TOP']).abspath
sandesh_file = src_root + '/vrouter/sandesh/vr.sandesh'
build_dir = build_root + '/vrouter/utils/vtest/'

system_header_path = GetOption('system-header-path')
if system_header_path:
    env.Append(CPPPATH = system_header_path + '/include/')

env.Append(CPPPATH = ['./include', build_dir, build_root+'/../include'])
if sys.platform.startswith('win'):
    env.Append(CPPPATH = '#/build/include/libxml2')
    env.Append(LINKFLAGS = '/STACK:"10000000"')
else:
    env.Append(CPPPATH = '/usr/include/libxml2')
    env.Append(CCFLAGS = '-g -std=gnu99')

libvrutil = 'vrutil'
libvrutil_objs = [env.Object('nl_util.lo', '../nl_util.c'), 
                  env.Object('udp_util.lo', '../udp_util.c'),
                  env.Object('ini_parser.lo', '../ini_parser.c'),
                  env.Object('vr_util.lo', '../vr_util.c')]

env.StaticLibrary(libvrutil, libvrutil_objs)

env.Replace(LIBPATH = env['TOP_LIB'])
env.Append(LIBPATH = ['.', '../../sandesh', './vhost/lib/'])
env.Replace(LIBS = [libvrutil, 'sandesh-c', 'dp_sandesh_c', 'xml2'])
if sys.platform.startswith('win'):
    env.Append(LIBS = ['windowsstubs', 'ws2_32', 'Iphlpapi'])
else:
    env.Append(LIBS = ['jnprvnet', 'pcap', 'rt', 'nl-3', 'nl-genl-3'])

sandesh_gen = env.Program('sandesh_gen.c')

sandesh_gen_cmd = build_root + '/vrouter/utils/vtest/sandesh_gen' + ' ' + sandesh_file
sandesh_gen_output = env.Command('sandesh_gen_output', sandesh_gen,
        sandesh_gen_cmd, chdir=build_dir)

vtest_src = [
                'vt_main.c',
                'vt_message.c',
                'vt_packet.c',
                'vt_gen_lib.c',
                'vt_gen_message_modules.c',
                'vt_gen_sandesh.c',
                'vt_gen_sandesh_expect.c',
                'vt_sandesh_response.c',
                'vt_process_xml.c',
            ]

if not sys.platform.startswith('win'):
    vtest_src.append('vt_packet.c')

    env.Command('libjnprvnet.a', None, 'make', chdir=src_root+'/vrouter/utils/vtest/vhost')

vtest = env.Program('vtest', vtest_src)
Export('vtest')
env.Requires(vtest, sandesh_gen_output)

# Local Variables:
# mode: python
# End:
